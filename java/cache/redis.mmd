Mind Map generated by NB MindMap plugin
> __version__=`1.1`,showJumps=`true`
---

# redis

## persistence

### AOF

#### enable AOF<br/>appendonly

#### pros

##### append only file write is very fast

##### can choose different kind of fsync policy

###### everysec

###### always

###### no

##### automatically rewrite aof files

##### can manually recovery data if no aof file rewrite happen

#### cons

##### aof file are bigger than RBD

##### performance is less than RBD when fsync is enabled

### RDB

#### pros

#####  very good for disaster recovery

##### data very compact\(dump\.rdb\)

##### performnace is very good due to backup in child process

###### BGSAVE \[SCHEDULE\]

##### allows faster restarts with big datasets compared to AOF

#### cons

##### data lost is big due to snapshot

##### backup is CPU intensive if dataset is big

## cache issues
> leftSide=`true`


### cache penetration

#### defintion:cache key not exists in db and empty value is not cached<br/>precautions:<br/>1\.cache the empty value and set a short epire time<br/>2\.use bloom filter\(quicker on insert\) or Cuckoo filter\(quicker on search\) <br/>to determine key existence before search on cache and DB<br/>opensource implementation:RedisBloom
> align=`left`


### cache breakdown
> leftSide=`true`


#### difinition:cache key expired and meanwhile lots of search against the expired key<br/>precautions:<br/>1\.use distribution lock to avoid concurrent search on the same key<br/>2\.use worker thread to asyncrhonously update expire time of hot data
> align=`left`


### cache avalanche
> leftSide=`true`


#### definition:lots of key expired simultaneously or cache service is down<br/>precautions:<br/>1\.clustering cache service<br/>2\.use baset ime\+ random time policy to set expire time<br/>3\.add rate limiting to avoid DB overloading
> align=`left`

